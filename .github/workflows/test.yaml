name: Unit Test

on:
  push:

jobs:
  unittest:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        python-version:
          - 3.9
          - 3.12
          - 3.13

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install uv
        uses: astral-sh/setup-uv@v6
        with:
          enable-cache: true
          cache-suffix: ${{ runner.os }}-uv-test-${{ hashFiles('**/requirements.txt') }}

      - name: Install dependencies
        run: |
          python -m venv .venv
          . .venv/bin/activate
          uv pip install coverage
          uv pip install -e .

      - name: Run unit test
        run: |
          python -m venv .venv
          . .venv/bin/activate
          python -m coverage run -m unittest discover -s test -v

      - name: Report coverage
        run: |
          python -m venv .venv
          . .venv/bin/activate
          report_args=(
            --omit='/usr/*,test/*'
          )
          python -m coverage report "${report_args[@]}"
          python -m coverage html
          python -m coverage json "${report_args[@]}"
          zip -r htmlcov-$(git describe --always)-${{ matrix.python-version }}.zip htmlcov coverage.json
          echo '## Coverage summary' >> $GITHUB_STEP_SUMMARY
          python test/coverage_to_md.py coverage.json >> $GITHUB_STEP_SUMMARY

      - name: upload
        uses: actions/upload-artifact@v4
        with:
          name: htmlcov-${{ matrix.python-version }}
          path: htmlcov-*.zip
